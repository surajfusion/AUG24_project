<apex:page controller="HtmltoPDF">
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js"></script>
  <div id="printArea">
  <!-- Content you want to "print" or convert to a Blob -->
  <h1>Hello, World!</h1>
  <p>This content will be captured and converted to a Blob instead of using window.print().</p>
  asdf
  asdf
  asd
  f
  asdf
  asd
  f
  asdf
  asdf
  asd
  fs
  dfa
  sdfa
  sdfasd
  f
  asdf
  as
  df
</div>

<button id="createBlob">Convert to PDF Blob</button>


<script type="text/javascript">
    function getRemoteAccount(blobData) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.HtmltoPDF.saveFile}',
            blobData, 
            function(result, event){
                console.log('result', result);
                if (event.status) {
                } else {
                    
                }
            }, 
            {escape: true}
        );
    }
    



  document.getElementById('createBlob').addEventListener('click', function () {
    // Capture the content using html2canvas
    html2canvas(document.getElementById('printArea')).then(function (canvas) {
      // Convert the canvas to an image
      var imgData = canvas.toDataURL('image/png');
      
      // Create a new jsPDF instance
      var pdf = new jsPDF('p', 'mm', 'a4');
      
      // Add the image to the PDF and scale it
      pdf.addImage(imgData, 'PNG', 10, 10, 180, 160);
      
      // Get the PDF as a Blob
      var pdfBlob = pdf.output('blob');
      
      // Do something with the Blob (e.g., upload, download, etc.)
      console.log(pdfBlob);
      getRemoteAccount(pdfBlob);
      
      // Example: Download the Blob as a file
      var link = document.createElement('a');
      link.href = URL.createObjectURL(pdfBlob);
      link.download = 'document.pdf';
      link.click();
    });
  });
</script>

</apex:page>